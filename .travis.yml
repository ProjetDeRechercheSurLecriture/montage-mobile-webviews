language: java

node_js:
  - 0.10

jdk: oraclejdk7

# whitelist
branches:
  only:
    - travis

env:
  - ANDROID_SDKS=android-18,sysimg-18  ANDROID_TARGET=android-18  ANDROID_ABI=armeabi-v7a

before_install:
  - npm install -g grunt-cli
  # fix the 64bit box
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch; fi

  # download the latest android sdk and unzip
  - wget https://dl.google.com/android/android-sdk_r22.0.5-linux.tgz
  - tar -zxf android-sdk_r22.0.5-linux.tgz

  # setup your ANDROID_HOME and PATH environment variables
  # use ~/builds/[Github username]/[project]/android-sdk-linux
  - export ANDROID_HOME=`pwd`/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Download the android sdk we need
  # Android Platform tools, required to compile
  # TOOLS=$(android list sdk --no-ui | grep "Android SDK Platform-tools" | cut -d"-" -f1)
  # android update sdk --filter "$TOOLS" --no-ui --force

  # API 16 stuff which needs to be provided
  # SDK=$(android list sdk --no-ui | grep ", API 17," | cut -d"-" -f1)
  # android update sdk --filter "$SDK" --no-ui --force
  - echo y | android update sdk --filter platform-tools,$ANDROID_SDKS --no-ui --force  > /dev/null

  # Create and start emulator
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window -no-boot-anim &

before_script:
  # Make sure the emulator has started before running tests
  - npm install -g grunt-cli
  - npm install -g cordova
  # - npm install 
  - grunt android
  # ./wait_for_emulator
  # - android update project -p./platforms/android
  # - android update test-project --path ./platforms/android-test --main ../android
  # - cd platforms/android/
  # - ant clean debug install